// Generated by CoffeeScript 1.6.1
(function() {
  var KssStateGenerator;

  KssStateGenerator = (function() {

    function KssStateGenerator() {
      var idx, idxs, pseudos, replaceRule, rule, stylesheet, _i, _j, _len, _len1, _ref, _ref1;
      pseudos = /(\.styleguide-example).*(\:hover|\:disabled|\:active|\:visited)/g;
      try {
        _ref = document.styleSheets;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          stylesheet = _ref[_i];
          idxs = [];
          _ref1 = stylesheet.cssRules;
          for (idx = _j = 0, _len1 = _ref1.length; _j < _len1; idx = ++_j) {
            rule = _ref1[idx];
            if ((rule.type === CSSRule.STYLE_RULE) && pseudos.test(rule.selectorText)) {
              replaceRule = function(matched, stuff) {
                return matched.replace(/\:/g, '.pseudo-class-');
              };
              this.insertRule(rule.cssText.replace(pseudos, replaceRule));
            }
          }
        }
      } catch (_error) {}
    }

    KssStateGenerator.prototype.insertRule = function(rule) {
      var headEl, styleEl;
      headEl = document.getElementsByTagName('head')[0];
      styleEl = document.createElement('style');
      styleEl.type = 'text/css';
      if (styleEl.styleSheet) {
        styleEl.styleSheet.cssText = rule;
      } else {
        styleEl.appendChild(document.createTextNode(rule));
      }
      return headEl.appendChild(styleEl);
    };

    return KssStateGenerator;

  })();

  $(function() {
    return new KssStateGenerator;
  });

  jetbrick.api.AutoDemo = (function() {

    function AutoDemo(dom) {
      var html, modifier;
      this.dom = dom;
      html = this.dom.find("[type=syntaxhighlighter]").html();
      html = html.between("<![CDATA[", "]]>");
      modifier = this.dom.attr("data-modifier-name");
      if (modifier) {
        modifier = "<span class=\"styleguide-modifier-name\">" + modifier + "</span>";
      }
      html = $("<div class=\"styleguide-element clearfix\">\n   " + (modifier || "") + "\n   " + html + "\n</div>");
      this.dom.before(html);
      html.apiComponents();
    }

    return AutoDemo;

  })();

  $(function() {
    SyntaxHighlighter.defaults.gutter = false;
    SyntaxHighlighter.defaults.toolbar = false;
    return SyntaxHighlighter.all();
  });

}).call(this);
